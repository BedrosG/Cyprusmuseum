from flask import Flask, request, jsonify
from flask_cors import CORS
import tensorflow as tf
from tensorflow.keras.applications.mobilenet_v2 import preprocess_input, decode_predictions
from tensorflow.keras.preprocessing import image
import numpy as np
import base64
import io
from PIL import Image

app = Flask(__name__)
CORS(app)

# Load the model
model = tf.keras.applications.MobileNetV2(weights="imagenet")

@app.route('/')
def home():
    return 'Mobile Object Detection Server Running'

@app.route('/predict', methods=['POST'])
def predict():
    try:
        data = request.get_json()
        img_data = data['image'].split(",")[1]
        img_bytes = base64.b64decode(img_data)

        img = Image.open(io.BytesIO(img_bytes)).convert("RGB")
        img = img.resize((224, 224))
        x = image.img_to_array(img)
        x = np.expand_dims(x, axis=0)
        x = preprocess_input(x)

        preds = model.predict(x)
        label = decode_predictions(preds, top=1)[0][0][1]
        confidence = float(decode_predictions(preds, top=1)[0][0][2])

        return jsonify({'label': label, 'confidence': confidence})
    
    except Exception as e:
        return jsonify({'error': str(e)})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
